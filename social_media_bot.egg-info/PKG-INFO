Metadata-Version: 2.1
Name: social_media_bot
Version: 0.1.0
Summary: An AI-powered system for autonomous social media content curation and posting
Author: Minhal
Author-email: romeomino415@gmail.com
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: crewai
Requires-Dist: openai
Requires-Dist: twikit
Requires-Dist: requests
Requires-Dist: beautifulsoup4
Requires-Dist: sqlalchemy
Requires-Dist: newsapi-python
Requires-Dist: feedparser
Requires-Dist: python-dotenv

# Autonomous Social Media Content Curator

An AI-powered system for autonomous social media content curation and posting using CrewAI.

## Current Implementation Status

### Implemented Components
- Core system architecture with CrewAI integration
- Azure OpenAI integration for AI processing
- Agent system with five specialized agents:
  - News Collector
  - Content Analyzer
  - Content Creator
  - Posting Manager
  - Safety Monitor
- Task definitions for each agent
- Basic logging and error handling
- Environment configuration setup

### Pending Implementation
1. **Tool Development** (Next Priority):
   - News gathering tools (NewsAPI + RSS integration)
   - Content analysis tools
   - Social media posting tools
   - Safety check tools

2. **API Integrations**:
   - Twitter API implementation
   - LinkedIn API implementation
   - News API service setup

3. **Data Storage**:
   - Posting history tracking
   - Performance metrics storage

4. **Safety Features**:
   - Content moderation implementation
   - Duplicate detection system
   - Rate limiting logic

5. **Dashboard & Monitoring**:
   - Real-time status dashboard
   - Performance metrics visualization
   - Error tracking interface

## Architecture

The system uses a microservices-based architecture with specialized AI agents:

1. **News Collector Agent**: Gathers and filters relevant news
2. **Content Analyzer Agent**: Evaluates content relevance and viral potential
3. **Content Creator Agent**: Generates platform-specific content
4. **Posting Manager Agent**: Handles scheduling and posting
5. **Safety Monitor Agent**: Ensures content safety and compliance

## Features

- Automated news collection from multiple sources
- Content analysis and virality prediction
- Platform-specific content generation (X/Twitter, LinkedIn)
- Automated posting with optimal timing
- Content safety and compliance checking
- Performance tracking and analytics

## Tech Stack

- **Core Framework**: CrewAI
- **Language**: Python 3.9+
- **APIs**: 
  - NewsAPI for content collection
  - Twitter API v2
  - LinkedIn API
  - OpenAI API for content generation
- **Database**: SQLAlchemy with PostgreSQL
- **Monitoring**: Built-in logging and dashboard

## Setup

1. Clone the repository
2. Install dependencies:
   ```bash
   pip install -r requirements.txt
   ```

3. Set up environment variables:
   ```bash
   cp .env.example .env
   ```
   Fill in your API keys and credentials

4. Run the system:
   ```bash
   python social_media_bot/main.py
   ```

## Configuration

Key configuration files:
- `.env`: API keys and credentials
- `config/`: Platform-specific settings
- `templates/`: Content templates

## Safety Features

- Content moderation filters
- Duplicate content detection
- Rate limiting
- Manual review option
- Emergency stop capability

## Monitoring

The system includes:
- Real-time logging
- Performance metrics
- Content engagement tracking
- Error monitoring
- API usage tracking

## Development Timeline

1. **Phase 1** (Week 1-2):
   - Basic infrastructure setup
   - News collection implementation
   - Content analysis pipeline

2. **Phase 2** (Week 3-4):
   - Platform integration
   - Content generation
   - Safety features

3. **Phase 3** (Week 5-6):
   - Testing and optimization
   - Dashboard development
   - Documentation

## Contributing

1. Fork the repository
2. Create a feature branch
3. Submit a pull request

## License

MIT License 
